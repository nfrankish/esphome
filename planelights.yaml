substitutions:
  LIGHT_ON_TIME: 90s
esphome:
  name: planelights
  on_boot:
    priority: 600.00
    then:
         - switch.turn_on: relay
         - delay: ${LIGHT_ON_TIME}
         - switch.turn_off: relay
         - delay: 1s
         - switch.turn_on: relay
         - delay: 2s
         - switch.turn_off: relay
         - delay: 1s
         - switch.turn_on: relay
         - delay: 30s
         - switch.turn_off: relay
         - deep_sleep.enter:


esp8266:
  board: esp12e

# Use the red LED in the device as a status LED, which will blink if there are warnings (slow) or errors (fast)
#status_led:
#  pin:
#    number: GPIO16
#    inverted: True

# relay output, exposed as switch in Home Assistant
switch:
  - platform: gpio
    pin: GPIO5
    name: Relay
    id: relay

deep_sleep:
  run_duration: 120s
  sleep_duration: 0s
# Enable logging
logger:
  level: DEBUG

debug:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

ota:
   password: !secret ota_password

api:
  password: !secret ota_password

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO12
      mode:
        input: true
        pullup: true
    name: trigger
    filters:
      - invert:
    on_press:
      then:
        - switch.turn_on: relay
        - delay: ${LIGHT_ON_TIME}
        - switch.turn_off: relay
        - delay: 1s
        - switch.turn_on: relay
        - delay: 2s
        - switch.turn_off: relay
        - delay: 1s
        - switch.turn_on: relay
        - delay: 30s
        - switch.turn_off: relay


        #timer:
        #  - id: light_on
        #    name: "Lights running"
        #    duration: "00:00:30"

        #automation:
        #  - id: turn_on
        #    trigger:
        #      platform: state
        #      entity_id: binary_sensor.trigger
        #      from: "off"
        #      to: "on"
        #    action:
        #      - switch.turn_on: relay
        #      - delay: 30s
        #      - switch.turn_off: relay
        #  - id: turn_off
        #    trigger:
        #      platform: event
        #      event_time: timer.finished
        #      event_data:
        #        entity_id: light_on
        #    action:
        #      - switch.turn_off: relay
